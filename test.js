'use strict'

/*console.log('number' + 3 + 3);
Получим строку 'number 33' потому что '' и "" будут остначать что это стринга (строка)*/
/* console.log(null + 3);
Получим число 3 так как null определится как число 0 и 0 + 3 будет 3*/

/* console.log(5 && "qwerty");
Получим "qwerty" поскольку 2 операнада равны */

/*console.log(+'40' + +'2' + "hillel")
Результат 42hillel строкой, так как в первой части уровнения 40 + 2 это математическое выражение, а hillel это строка*/

/*console.log('10' - 5 === 6);
Резйльтат fasle, так как 5 не равно 6ти, === строгое приравнивание*/

/*console.log(true + false);
Результат 1, так как + делает математическое вычисление а true это 1 false это 0*/

/*console.log('4px' - 3);
Результат NaN, потому что 4px это строка, оно не может быть числом. По этому мы не можем от строки отнять число */

/*console.log('4' - 3);
Результат 1, потому что стринга '4' с - переходит в математическое вычисление и становится number*/

/*console.log('6' + 3 ** 0);
 3 в степене 0 это 1, 6 это стринга и подставляется 1 */

// console.log(12 / '6');
// Деление приобразовывает в число

/*console.log('10' + (5 === 6));
10 fasle, так как стринга 10 + рузультат сравнения 5 и 6*/

/*console.log(null == '');
Ответ fasle потому что 2 значения оба fasle, но так как null представляет отсутствие значения, пустая строка '' является строкой, которая состоит из нуля символов*/

/*console.log(3 ** (9 / 3));
Сначала будет выполнено выражение в скобках: 9 / 3, что равно 3.
Затем результат деления, равный 3, будет использован в качестве степени для числа 3, и будет выполнено возведение числа 3 в степень 3.
Таким образом, результат выражения 3 ** (9 / 3) будет равен 27.*/

/*console.log(!!'false' == !!'true');
Таким образом, !!'false' == !!'true' будет равно true, потому что оба операнда преобразуются в true после применения двойного отрицания*/

/*console.log(0 || '0' && 1);
Поскольку первый операнд 0 является ложным, оператор || вернет значение второго операнда, то есть '0'
Оба операнда являются истинными, поэтому оператор && возвращает последний истинный операнд, то есть 1
результат выражения будет равен 1*/

/*console.log((+null == false) < 1);
+null преобразуется в число, и так как null преобразуется в 0, результат будет 0
'false преобразуется в 0 при нестрогом сравнении, так как в логическом контексте
false эквивалентно 0
Поскольку первое выражение равно true, оно будет преобразовано в число, то есть 
Теперь у нас имеем сравнение 1 < 1, которое возвращает false'
Таким образом, результат выражения будет false*/

/*console.log(false && true || true);
false && true: оператор && возвращает false, если хотя бы один из операндов равен false, иначе он возвращает последний истинный операнд. В данном случае, так как первый операнд false, выражение false && true будет равно false.
false || true: оператор || возвращает true, если хотя бы один из операндов равен true, иначе он возвращает последний ложный операнд. В данном случае, первый операнд false, но второй операнд true, следовательно, выражение false || true будет равно true.
Итак, результат выражения будет true.*/

/*console.log(false && (false || true))
false || true: оператор || (логическое ИЛИ) возвращает true, если хотя бы один из операндов равен true. В данном случае, оба операнда равны false, поэтому результат этого выражения будет true.
false && (false || true): оператор && (логическое И) возвращает true, если оба операнда равны true, иначе он возвращает false. Здесь первый операнд false, поэтому выражение false && (false || true) будет также равно false.
Итак, результат этого выражения равен false*/

/*console.log((+null == false) < 1 ** 5);
Ответ будет false, так как +null равно false а 1 в степени 5 и true меньше 1*/
